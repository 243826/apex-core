/*
 *  Copyright (c) 2012 Malhar, Inc.
 *  All Rights Reserved.
 */
package com.malhartech.bufferserver;

option optimize_for = SPEED;

message Payload {
  required bytes data = 1;
  required uint32 partition = 2 [default = 0];
}

message ResetWindow {
  required uint32 width = 1;
}

message Partitions {
   required uint32 mask = 1;
   repeated uint32 partition = 2;
}

message SubscriberRequest {
  enum PolicyType {
    CUSTOM = 0;
    ROUND_ROBIN = 1;
    RANDOM_ONE = 2;
    LEAST_BUSY = 3;
    GIVE_ALL = 4;
  }

  required string identifier = 1;
  required string type = 2;
  optional uint32 base_seconds = 3 [default = 0];
  optional string upstream_identifier = 4;
  optional Partitions partitions = 5;
  optional PolicyType policy = 6 [default = GIVE_ALL ];
}

message PublisherRequest {
  required string identifier = 1;
  optional uint32 base_seconds = 2 [default = 0];
}

message PurgeRequest {
  required string identifier = 1;
  optional uint32 base_seconds = 2 [default = 0];
}

message ResetRequest {
  required string identifier = 1;
}

message CodecState {
  required bytes data = 1;
}

message Message {
  enum MessageType {
    NO_MESSAGE = 0;
    RESET_WINDOW = 1;
    BEGIN_WINDOW = 2;
    PAYLOAD = 3;
    END_WINDOW = 4;
    END_STREAM = 5;
    PUBLISHER_REQUEST = 6;
    SUBSCRIBER_REQUEST = 7;
    PURGE_REQUEST = 8;
    RESET_REQUEST = 9;
    CHECKPOINT = 10;
    CODEC_STATE = 11;
  }

  required MessageType type = 1;
  required uint32 window_id = 2;

  optional ResetWindow resetWindow = 3;
  optional Payload payload = 4;
  optional PublisherRequest publishRequest = 5;
  optional SubscriberRequest subscribeRequest = 6;
  optional PurgeRequest purgeRequest = 7;
  optional ResetRequest resetRequest = 8;
  optional CodecState codecState = 9;
}