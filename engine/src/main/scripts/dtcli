#!/bin/bash

echoerr() { echo "$@" 1>&2; }
real_dir() {
  SOURCE="${1:-${BASH_SOURCE[0]}}"
  while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
    SOURCE_DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
    SOURCE="$(readlink "$SOURCE")"
    [[ $SOURCE != /* ]] && SOURCE="$SOURCE_DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
  done
  SOURCE_DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  echo "$SOURCE_DIR"
}
script_dir=$(real_dir "${BASH_SOURCE[0]}")

# Create missing clirc file for current user
if [ ! -f "${HOME}/.dt/clirc" ]; then
  mkdir -p "${HOME}/.dt"
  cat >${HOME}/.dt/clirc <<EOF
# User editable dtcli settings
EOF
fi

# Load DataTorrent environment settings
for conf_dir in "${script_dir}/../conf" "$HOME/.dt"; do
    [[ -f "${conf_dir}/dt-env.sh" ]] && . "${conf_dir}/dt-env.sh"
done

if [ "$DT_CLIENT_OPTS" = "" ]; then
  DT_CLIENT_OPTS="-Xmx1024m -XX:MaxPermSize=512m -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled"
fi

export HADOOP_CLIENT_OPTS="$DT_CLIENT_OPTS"

# check for hadoop in the path
HADOOP_IN_PATH=`which hadoop 2>/dev/null`
if [ -f "${HADOOP_IN_PATH}" ]; then
  HADOOP_DIR=`dirname "$HADOOP_IN_PATH"`/..
fi
# HADOOP_HOME env variable overrides hadoop in the path
HADOOP_PREFIX=${HADOOP_PREFIX:-${HADOOP_HOME:-$HADOOP_DIR}}

BUILD_DIR="$( dirname "$0" )/../../../target"
if [ "$HADOOP_PREFIX" = "" ]; then
  MVN_GENERATED_PATH="$BUILD_DIR/mvn-generated-runtime-classpath"
else
  MVN_GENERATED_PATH="$BUILD_DIR/mvn-generated-runtime-classpath-no-hadoop"
fi

if [ -f "$MVN_GENERATED_PATH" ]; then
  # development launch mode
  #echoerr "Setting classpath from: $MVN_GENERATED_PATH"
  DT_CORE_JAR=`ls $BUILD_DIR/dt-stram-*.jar | grep -vE "tests.jar|sources.jar|javadoc.jar" | head -1`
  if [ ! -f "$DT_CORE_JAR" ]; then
    echoerr "Error: Cannot find $DT_CORE_JAR";
    exit 1;
  fi
  DT_CLASSPATH="$DT_CLASSPATH:$DT_CORE_JAR"
  DT_CLASSPATH=$DT_CLASSPATH:`cat $MVN_GENERATED_PATH`
else
  # running from installation
  if [ "$HADOOP_PREFIX" = "" ]; then
    echoerr "Hadoop installation not found. Please set HADOOP_PREFIX or include hadoop in PATH."
    exit 1;
  fi
  BASEDIR=$( cd ${script_dir}/..; pwd -P )
  DT_CLASSPATH=$BASEDIR/lib'/*'":${DT_CLASSPATH}"
fi

#echoerr "$DT_CLASSPATH"

if [ "$DT_CLASSPATH" != "" ]; then
  if test -z "$HADOOP_CLASSPATH"
  then
    export HADOOP_CLASSPATH="$DT_CLASSPATH"
  else
    export HADOOP_CLASSPATH="$HADOOP_CLASSPATH:$DT_CLASSPATH"
  fi
fi

if [ "$HADOOP_PREFIX" = "" ]; then
  echoerr "Warning: HADOOP_PREFIX is not set, running standalone."
  export CLASSPATH=$DT_CLASSPATH
  java $DT_CLIENT_OPTS com.datatorrent.stram.cli.DTCli "$@"
else
  # remove hadoop and duplicate slf4j binding (bash replace is too slow)
#  export HADOOP_CLASSPATH=${HADOOP_CLASSPATH/slf4j-log4j12-1.7.1.jar/slf4j-log4j12-DUPBINDING.jar}
  export HADOOP_USER_CLASSPATH_FIRST=1
  export HADOOP_CLASSPATH=$(echo -n "$HADOOP_CLASSPATH" | tr ":" "\n" | sed "/slf4j-log4j/d" | sed "/org\/apache\/hadoop/d" | tr "\n" ":")
#  $HADOOP_PREFIX/bin/hadoop classpath
  $HADOOP_PREFIX/bin/hadoop com.datatorrent.stram.cli.DTCli "$@"
fi

