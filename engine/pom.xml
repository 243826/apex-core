
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.malhartech</groupId>
    <artifactId>malhar-framework</artifactId>
    <version>0.1-SNAPSHOT</version>
  </parent>

  <artifactId>malhar-stram</artifactId>
  <packaging>jar</packaging>

  <name>Streaming Application Manager</name>
  <url>http://malhar-inc.com</url>

  <organization>
    <name>Malhar Inc</name>
    <url>http://www.malhar-inc.com/</url>
  </organization>

  <licenses>
    <license>
      <name>Malhar Inc 0.9</name>
      <url>http://www.malhar-inc.com/licenses/LICENSE-0.9</url>
    </license>
  </licenses>
  <inceptionYear>2012</inceptionYear>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <netbeans.hint.license>malhar-inc</netbeans.hint.license>
  </properties>

  <build>
    <plugins>
      <!-- Publish tests jar -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.4</version>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
            <phase>package</phase>
          </execution>
        </executions>
        <configuration>
          <excludes>
            <!-- never include into jar (used in minicluster test) -->
            <exclude>**/yarn-site.xml</exclude>
          </excludes>
          <archive>
            <manifestEntries>
              <malhar-buildtime>${maven.build.timestamp}</malhar-buildtime>
              <malhar-buildversion>${project.version}</malhar-buildversion>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.2</version>
        <configuration>
          <encoding>UTF-8</encoding>
          <source>1.6</source>
          <target>1.6</target>
          <debug>true</debug>
          <!--optimize>true</optimize-->
          <showDeprecation>true</showDeprecation>
          <showWarnings>true</showWarnings>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>create-client-mvn-generated-classpath</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>build-classpath</goal>
            </goals>
            <configuration>
              <!--
              generate runtime classpath for running client in dev environment
              -->
              <outputFile>${project.build.directory}/mvn-generated-runtime-classpath</outputFile>
              <includeScope>runtime</includeScope>
              <!--excludeGroupIds>org.apache.hadoop</excludeGroupIds-->
            </configuration>
          </execution>
          <execution>
            <id>create-mvn-generated-classpath</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>build-classpath</goal>
            </goals>
            <configuration>
              <!-- needed to run the unit test to generate
              the required classpath that is required in the env
              of the launch container in the mini yarn cluster
              -->
              <outputFile>${project.build.directory}/test-classes/mvn-generated-classpath</outputFile>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-eclipse-plugin</artifactId>
        <version>2.9</version>
        <configuration>
          <downloadSources>true</downloadSources>
          <!--downloadJavadocs>true</downloadJavadocs-->
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.12</version>
        <dependencies>
          <dependency>
            <groupId>org.apache.maven.surefire</groupId>
            <artifactId>surefire-junit47</artifactId>
            <version>2.12</version>
          </dependency>
        </dependencies>
        <configuration>
          <excludedGroups>${test.excludedGroups}</excludedGroups>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.10</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.activemq</groupId>
      <artifactId>activemq-core</artifactId>
      <version>5.6.0</version>
      <exclusions>
        <exclusion>
          <artifactId>hadoop-core</artifactId>
          <groupId>org.apache.hadoop</groupId>
        </exclusion>
        <exclusion>
          <artifactId>geronimo-jms_1.1_spec</artifactId>
          <groupId>org.apache.geronimo.specs</groupId>
        </exclusion>
        <exclusion>
          <artifactId>scala-library</artifactId>
          <groupId>org.scala-lang</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>javax.jms</groupId>
      <artifactId>jms-api</artifactId>
      <version>1.1-rev-1</version>
    </dependency>
    <dependency>
      <groupId>com.esotericsoftware.reflectasm</groupId>
      <artifactId>reflectasm</artifactId>
      <version>1.07</version>
      <classifier>shaded</classifier>
    </dependency>
    <!--dependency>
        <groupId>org.reflections</groupId>
        <artifactId>reflections</artifactId>
        <version>0.9.8</version>
    </dependency-->
    <dependency>
      <groupId>com.esotericsoftware.kryo</groupId>
      <artifactId>kryo</artifactId>
      <version>2.21</version>
    </dependency>

    <dependency>
      <groupId>org.apache.bval</groupId>
      <artifactId>bval-jsr303</artifactId>
      <version>0.5</version>
    </dependency>
    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
      <version>1.0.0.GA</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-websocket</artifactId>
      <version>8.1.10.v20130312</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>malhar-bufferserver</artifactId>
      <version>${project.version}</version>
    </dependency>
    <!--dependency>
      <groupId>com.esotericsoftware.kryo</groupId>
      <artifactId>kryo</artifactId>
      <version>2.21-SNAPSHOT</version>
    </dependency-->
    <dependency>
      <groupId>malhar</groupId>
      <artifactId>netlet</artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-websocket</artifactId>
      <version>8.1.9.v20130131</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <profiles>
    <!--
      profile for building against Hadoop 2.0.
    -->
    <profile>
      <id>hadoop-2.0</id>
      <activation>
        <property>
          <name>!hadoop.profile</name>
          <!--value>23</value-->
        </property>
      </activation>
      <properties>
        <hadoop.version>2.0.3-alpha</hadoop.version>
        <test.excludedGroups>com.malhartech.annotation.PerformanceTestCategory</test.excludedGroups>
      </properties>
      <dependencies>
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-common</artifactId>
          <version>${hadoop.version}</version>
        </dependency>
        <dependency>
          <!-- required for JarFinder -->
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-common</artifactId>
          <version>${hadoop.version}</version>
          <type>test-jar</type>
          <scope>compile</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-yarn-client</artifactId>
          <version>${hadoop.version}</version>
        </dependency>
        <!-- test deps for hadoop-2.0 profile -->
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-yarn-server-tests</artifactId>
          <version>${hadoop.version}</version>
          <type>test-jar</type>
          <scope>test</scope>
        </dependency>
      </dependencies>
      <build>
        <plugins>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>fullTests</id>
      <properties>
        <test.excludedGroups></test.excludedGroups>
      </properties>
    </profile>

    <profile>
      <!--  version info profile to generate exactly once after clean -->
      <id>generate-version-info</id>
      <activation>
        <file>
          <!--
            ${project.artifactId} does not work - see https://jira.codehaus.org/browse/MNG-5418
            (required to use this for all modules from parent project)
          -->
          <missing>target/classes/malhar-stram-git.properties</missing>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>pl.project13.maven</groupId>
            <artifactId>git-commit-id-plugin</artifactId>
            <version>2.1.4</version>
            <executions>
              <execution>
                <id>create-git-version-info</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>revision</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <verbose>true</verbose>
              <prefix>git</prefix>
              <generateGitPropertiesFile>true</generateGitPropertiesFile>
              <generateGitPropertiesFilename>target/classes/malhar-stram-git.properties</generateGitPropertiesFilename>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
