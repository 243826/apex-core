
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.datatorrent</groupId>
    <artifactId>dt-framework</artifactId>
    <version>0.9.3-RC3</version>
  </parent>

  <artifactId>dt-stram</artifactId>
  <packaging>jar</packaging>

  <name>Streaming Application Manager</name>

  <build>
    <plugins>
      <!-- plugin> for licensing using native
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-nar-plugin</artifactId>
        <version>2.1-SNAPSHOT</version>
        <extensions>true</extensions>
      </plugin -->
      <!-- Publish tests jar -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
            <phase>package</phase>
          </execution>
        </executions>
        <configuration>
          <excludes>
            <!-- never include into jar (used in minicluster test) -->
            <exclude>**/yarn-site.xml</exclude>
          </excludes>
          <archive>
            <manifestEntries>
              <dt-buildtime>${maven.build.timestamp}</dt-buildtime>
              <dt-buildversion>${project.version}</dt-buildversion>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>create-client-mvn-generated-classpath</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>build-classpath</goal>
            </goals>
            <configuration>
              <!--
              generate runtime classpath for running client in dev environment
              -->
              <outputFile>${project.build.directory}/mvn-generated-runtime-classpath</outputFile>
              <includeScope>runtime</includeScope>
              <!--excludeGroupIds>org.apache.hadoop</excludeGroupIds-->
            </configuration>
          </execution>
          <execution>
            <id>create-mvn-generated-classpath</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>build-classpath</goal>
            </goals>
            <configuration>
              <!-- needed to run the unit test to generate
              the required classpath that is required in the env
              of the launch container in the mini yarn cluster
              -->
              <outputFile>${project.build.directory}/test-classes/mvn-generated-classpath</outputFile>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-eclipse-plugin</artifactId>
        <version>2.9</version>
        <configuration>
          <downloadSources>true</downloadSources>
          <!--downloadJavadocs>true</downloadJavadocs-->
        </configuration>
      </plugin>
      <plugin>
        <groupId>pl.project13.maven</groupId>
        <artifactId>git-commit-id-plugin</artifactId>
        <version>2.1.4</version>
        <executions>
          <execution>
            <id>create-git-version-info</id>
            <phase>${create-git-version-info-phase}</phase>
            <goals>
              <goal>revision</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <verbose>true</verbose>
          <prefix>git</prefix>
          <generateGitPropertiesFile>true</generateGitPropertiesFile>
          <generateGitPropertiesFilename>target/classes/dt-git.properties</generateGitPropertiesFilename>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>javax.jms</groupId>
      <artifactId>jms-api</artifactId>
      <version>1.1-rev-1</version>
    </dependency>
    <dependency>
      <groupId>com.esotericsoftware.kryo</groupId>
      <artifactId>kryo</artifactId>
      <version>2.21</version>
      <!-- scope>provided</scope would like the kryo version to be determined by what the user has -->
    </dependency>
    <dependency>
      <groupId>com.esotericsoftware.reflectasm</groupId>
      <artifactId>reflectasm</artifactId>
      <version>1.07</version>
      <classifier>shaded</classifier>
    </dependency>
    <dependency>
      <groupId>org.apache.bval</groupId>
      <artifactId>bval-jsr303</artifactId>
      <version>0.5</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>dt-bufferserver</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>4.2.5</version>
    </dependency>
    <dependency>
      <groupId>com.sun.jersey.contribs</groupId>
      <artifactId>jersey-apache-client4</artifactId>
      <version>${jersey.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-yarn-client</artifactId>
      <version>${hadoop.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.codehaus.jackson</groupId>
          <artifactId>jackson-core-asl</artifactId>
        </exclusion>
        <exclusion>
          <artifactId>jackson-jaxrs</artifactId>
          <groupId>org.codehaus.jackson</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jackson-xc</artifactId>
          <groupId>org.codehaus.jackson</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-yarn-server-tests</artifactId>
      <version>${hadoop.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>dt-api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <!-- dependency> for licensing using native
      <groupId>${project.groupId}</groupId>
      <artifactId>dt-license</artifactId>
      <version>${project.version}</version>
      <type>nar</type>
    </dependency -->
    <dependency>
      <groupId>jline</groupId>
      <artifactId>jline</artifactId>
      <version>2.11</version>
    </dependency>
    <dependency>
      <groupId>org.apache.ant</groupId>
      <artifactId>ant</artifactId>
      <version>1.9.2</version>
    </dependency>
    <dependency>
      <groupId>com.ning</groupId>
      <artifactId>async-http-client</artifactId>
      <version>1.7.20</version>
    </dependency>
    <dependency>
      <groupId>net.engio</groupId>
      <artifactId>mbassador</artifactId>
      <version>1.1.9</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>2.2.3</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-common</artifactId>
      <version>2.2.0</version>
      <type>test-jar</type>
      <exclusions>
        <exclusion>
          <groupId>org.codehaus.jackson</groupId>
          <artifactId>jackson-core-asl</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.sun.mail</groupId>
      <artifactId>javax.mail</artifactId>
      <version>1.5.0</version>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>1.8.5</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <profiles>
    <profile>
      <id>fullTests</id>
      <properties>
        <test.excludedGroups></test.excludedGroups>
      </properties>
    </profile>

    <profile>
      <!--  version info profile to generate exactly once after clean -->
      <id>generate-version-info</id>
      <activation>
        <file>
          <!--
            ${project.artifactId} does not work - see https://jira.codehaus.org/browse/MNG-5418
            (required to use this for all modules from parent project)
          -->
          <missing>target/classes/dt-git.properties</missing>
        </file>
      </activation>
      <properties>
        <create-git-version-info-phase>generate-resources</create-git-version-info-phase>
      </properties>
    </profile>

  </profiles>
</project>
